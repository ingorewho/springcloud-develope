<?xml version="1.0" encoding="UTF-8"?>
<!--status 可设置 FATAL > ERROR > WARN > INFO > DEBUG > TRACE-->
<!--monitorInterval 设置指定时间（单位：秒）后重新加载log4j配置文件，至少设置5s-->
<configuration status="debug" monitorInterval="30" packages="com.ignore.utils.log">

    <properties>
        <Property name="filePath">/tmp/ignore/zuul_server</Property>
        <Property name="logPattern">%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n</Property>
    </properties>

    <!--先定义所有的appender, appender 是LogEvents的drivers-->
    <appenders>
        <!--这个输出控制台的配置-->
        <Console name="Console" target="SYSTEM_OUT">
            <!--控制台只输出level及以上级别的信息, onMatch="ACCEPT" onMismatch="DENY"意思是匹配就接受,否则直接拒绝-->
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--这个都知道是输出日志的格式-->
            <PatternLayout pattern="${logPattern}"/>
        </Console>

        <!--会打印出所有信息到指定文件，append为TRUE表示消息增加到指定文件中，false表示消息覆盖指定的文件内容，默认值是true，适合临时测试用 -->
        <!--<File name="testLog" fileName="${filePath}/test.log" append="false">-->
            <!--<PatternLayout pattern="${logPattern}"/>-->
        <!--</File>-->

        <!--onMatch DENY/ACCEPT 禁止或者接受（是否接受匹配）-->
        <!--onMismatch DENY/NEUTRAL （是否接受其他高于level的级别）-->
        <!--<File name="WholeLog" fileName="${filePath}/WholeLog.log">-->
            <!--<ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>-->
            <!--<PatternLayout pattern="${logPattern}"/>-->
        <!--</File>-->

        <!--添加过滤器ThresholdFilter,可以有选择的输出某个级别以上的类别-->
        <!--<File name="ErrorLog" fileName="${filePath}/error.log">-->
            <!--<ThresholdFilter level="ERROR" onMatch="ACCEPT" onMismatch="DENY"/>-->
            <!--<PatternLayout pattern="${logPattern}"/>-->
        <!--</File>-->

        <!--<File name="File" fileName="output.log" bufferedIO="false" advertiseURI="file://path/to/output.log" advertise="true">
        </File>-->

        <!--这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 -->
        <RollingFile name="RollingLog" fileName="${filePath}/RollingLog.log"  filePattern="${filePath}/$${date:yyyy-MM}/web-%d{MM-dd-yyyy}-%i.log.gz">
            <PatternLayout pattern="${logPattern}"/>
            <Policies>
                <TimeBasedTriggeringPolicy modulate="true"
                                           interval="1" />
            </Policies>

            <!--<Filters>
                <ThresholdFilter level="WARN" onMatch="ACCEPT" onMismatch="DENY"/>
                <PackageNameFilter package="com.sinosig" onMatch="NEUTRAL" onMismatch="DENY"/>
            </Filters>-->

            <!-- 指定每天的最大压缩包个数，默认7个，超过了会覆盖之前的 -->
            <DefaultRolloverStrategy max="10"/>
        </RollingFile>

    </appenders>

    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <loggers>
        <!--写效率：Asyn logger > Asyn appenders > 同步-->

        <!--建立一个默认的root的logger, 同步写日志 -->
        <root level="trace" includeLocation="true">
            <appender-ref ref="Console"/>
           <!-- <appender-ref ref="WholeLog"/>
            <appender-ref ref="ErrorLog"/>-->
            <appender-ref ref="RollingLog"/>
        </root>

       <!-- 异步Appenders写日志-->
       <!-- <Async name="Async" level="trace">
            <appender-ref ref="Console"/>
            <appender-ref ref="testLog"/>
            <appender-ref ref="WholeLog"/>
            <appender-ref ref="ErrorLog"/>
            <appender-ref ref="RollingLog"/>
        </Async>-->

        <!-- 异步logger写日志,指定包路径-->
     <!--   <AsyncLogger name="com.example.demoserver" level="trace" includeLocation="true">
            <appender-ref ref="Console"/>
            <appender-ref ref="testLog"/>
            <appender-ref ref="WholeLog"/>
            <appender-ref ref="ErrorLog"/>
            <appender-ref ref="RollingLog"/>
        </AsyncLogger>-->
        <logger name="com.ignore" level="trace" includeLocation="true">
            <appender-ref ref="ignoreLog"/>
        </logger>
        <!-- 异步root logger写日志-->
      <!--  <asyncRoot level="trace" >
            <appender-ref ref="Console"/>
            <appender-ref ref="testLog"/>
            <appender-ref ref="WholeLog"/>
            <appender-ref ref="ErrorLog"/>
            <appender-ref ref="RollingLog"/>
        </asyncRoot>-->

    </loggers>

</configuration>